#!/bin/bash

function die {
    echo ""
    echo EXITCODE_RANK_$MPI_COMM_WORLD_RANK:$1
    exit $1
}

function existsExactlyOne {
    [[ $# -eq 1 && -f $1 ]]
}

# Default values
CONFIG_FILE=NONE
DATA_DIR=NONE
LOG_DIR=$PWD
MODEL_DIR=NONE
PREV_MODEL_PATH=NONE
IS_MEMCHECK=FALSE
EXTRA_ARGS=""
NUM_GPU=NONE
STDOUT_DIR=$PWD
IS_DEBUG=false
IS_PERF_TRACE=false
IS_GDB_WRAPPED=false

WORK_DIR=$PHILLY_HOME
BIN_BASE_DIR=$WORK_DIR/cntkbin
BIN_DIR=$BIN_BASE_DIR/bin
HDFS_DROPS=/hdfs/public/drops
MINICONDA_PATH=/usr/local/miniconda3/bin
BUILD_ID=NONE

# Parsing command line arguments:
while [[ $# > 0 ]]
do
key="$1"

case $key in
    -h|--help)
    echo "Usage: toolkit-execute [run_options]"
    echo "Options:"
    echo "  -n|--nGPU <num> - how many GPUs used for this job (default NONE)"
    echo "  -c|--configFile <config> - which configuration file to use (default NONE)"
    echo "  -d|--dataDir <path> - directory path to input files (default NONE)"
    echo "  -l|--logDir <path> - directory path to save the log files (default \$PWD)"
    echo "  -m|--modelDir <path> - directory path to save the model files (default NONE)"
    echo "  -s|--stdoutDir <path> - directory path to save the stdout (default \$PWD)"
    echo "  --debug - job is in debug mode (not used)"
    echo "  --perfTrace - job should run in perf trace mode (not used)"
    echo "  --gdbWrapped - job should run with GDB (default FALSE)"
    echo "  --prevModelDir - the prev model path to copy from (default None)"
    echo "  --memCheck - start job in memcheck mode (default FALSE)"
    echo "  -b|--buildID <buildID> - CNTK build to be used (defaukt None)"
    exit 1
    ;;
    -n|--nGPU)
    NUM_GPU="$2"
    shift # pass argument
    ;;
    -c|--configFile)
    CONFIG_FILE="$2"
    shift # pass argument
    ;;
    -d|--dataDir)
    DATA_DIR="$2"
    shift # pass argument
    ;;
    -l|--logDir)
    LOG_DIR="$2"
    shift # pass argument
    ;;
    -m|--modelDir)
    MODEL_DIR="$2"
    shift # pass argument
    ;;
    -s|--stdoutDir)
    STDOUT_DIR="$2"
    shift # pass argument
    ;;
    --debug)
    IS_DEBUG=true
    ;;
    --perfTrace)
    IS_PERF_TRACE=true
    ;;
    --gdbWrapped)
    IS_GDB_WRAPPED=true
    ;;
    --prevModelDir)
    PREV_MODEL_PATH="$2"
    shift # pass argument
    ;;
    --memCheck)
    IS_MEMCHECK=TRUE
    ;;
    -b|--buildID)
    BUILD_ID="$2"
    shift # pass argument
    ;;
    --)
    shift # pass argument
    EXTRA_ARGS="$@"
    break
    ;;
esac
shift # past argument or value
done

# Prints out the arguments that were passed into the script
echo "toolkit-execute: CONFIG_FILE=$CONFIG_FILE"
echo "toolkit-execute: DATA_DIR=$DATA_DIR"
echo "toolkit-execute: LOG_DIR=$LOG_DIR"
echo "toolkit-execute: MODEL_DIR=$MODEL_DIR"
echo "toolkit-execute: IS_MEMCHECK=$IS_MEMCHECK"
echo "toolkit-execute: EXTRA_ARGS=$EXTRA_ARGS"
echo "toolkit-execute: BUILD_ID=$BUILD_ID"
echo "toolkit-execute: WORK_DIR=$WORK_DIR"

# MPI Rank
MPI_COMM_WORLD_RANK=-1
MPI_COMM_LOCAL_RANK=-1
# Determine MPI version by reading link. If failed or mismatch, fall back to OpenMPI as default
if [[ $(readlink /usr/local/mpi 2>&1) == *mvapich* ]]; then
    MPI_COMM_WORLD_RANK=$MV2_COMM_WORLD_RANK
    MPI_COMM_LOCAL_RANK=$MV2_COMM_WORLD_LOCAL_RANK
else
    MPI_COMM_WORLD_RANK=$OMPI_COMM_WORLD_RANK
    MPI_COMM_LOCAL_RANK=$OMPI_COMM_WORLD_LOCAL_RANK
fi

git clone -b lewlu/AM-Softmax https://github.com/Microsoft/CNTK.git
mkdir CNTK/build/release -p
cd CNTK/build/release
../../configure --asgd=no
make -j all
cd bin
chmod 777 cntk
./cntk configFile=$CONFIG_FILE \
	  WorkDir=$WORK_DIR \
	  datadir=$DATA_DIR \
	  ModelDir=$MODEL_DIR \
	  stderr=$STDOUT_DIR \
	  progressTracing=true \
	  timestamping=true \
	  makeMode=true \
          excludedDevices=-1
